
Question link:- https://leetcode.com/problems/maximum-unique-subarray-sum-after-deletion/

class Solution {
public:
    int f(vector<int>& arr){
        int n = arr.size();
        int i = 0;
        int j = 0;
        unordered_set<int> st;
        int max_sum = INT_MIN;
        int sum = 0;
        while(j < n){
            sum += arr[j];
            while(i < n && st.find(arr[j]) != st.end()){
                sum -= arr[i];
                i++;
            }
            max_sum = max(max_sum, sum);
            st.insert(arr[j]);
            j++;
        }
        return max_sum;
    }
    int maxSum(vector<int>& nums) {
        vector<int> arr;
        unordered_set<int> st;
        int sum1 = INT_MIN;
        for(auto it : nums){
            if(it > 0) st.insert(it);
            else sum1 = max(sum1, it);
        }
        // int sum2 = f(arr);
        int sum3 = 0;
        if(st.size() == 0) sum3 = INT_MIN;
        for(auto it : st) sum3 += it;
        return max(sum1, sum3);
    }
};
